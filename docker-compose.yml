version: '3.8'

networks:
  default:
    driver: bridge
  kong-net:
    driver: bridge

volumes:
  kong-datastore:

services:
  frontend:
    container_name: login-protocol
    build:
      context: ./login-protocol  # 指定 Dockerfile 的目錄
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./login-protocol:/app  # 將 login-protocol 目錄掛載到容器內的 /app 目錄     
      - ./login-protocol/node_modules:/app/node_modules  # 將 login-protocol/node_modules 目錄掛載到容器內的 /app/node_modules 目錄 
    environment:
      - CHOKIDAR_USEPOLLING=true  # 設置環境變量，允許 Chokidar 使用輪詢模式來監視文件更改
      - WATCHPACK_POLLING=true  # 設置環境變量，允許 Webpack 使用輪詢模式來監視文件更改

  kong-db:
    image: postgres:11-alpine
    container_name: kong_db
    restart: always
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB:       api-gw
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong

  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    image: kong-oidc:latest
    container_name: kong
    restart: always
    depends_on:
      - kong-db
    networks:
      - kong-net
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          bundled,oidc
      KONG_LOG_LEVEL:        debug

  konga:
    image: pantsel/konga:0.14.9
    container_name: konga
    restart: always
    depends_on:
      - kong
    networks:
      - kong-net
    ports:
      - "1337:1337" # konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: '5432'
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: api-gw
      NODE_ENV: development
